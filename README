Despite the popular use of object association in many cell tracking problems, there has not been an open implementation of this method, let alone a well-designed library with high extensibility and standard interfaces. We attempt to address this situation by introducing BOT, a extensible C++ library for biomedical object tracking. Though initially designed for cell tracking, we hope to make BOT a generic algorithmic library adaptable to various biomedical tracking applications. 

Briefly, BOT features: 
1. Solver - An efficient pairwise object association solver based on integer linear programming (ILP); 
2. Feature - A rich set of generic features and extensible feature design using factory pattern; 
3. Learning - Structured learning for high-dimensional feature parametrization; 
4. Diversity - Confiurable workflow for supporting diverse applications;
5. GUI - A user-friendly GUI by integration with the Interactive Learning and Segmentation Toolkit (ilastik, http://www.ilastik.org/).

This library is the accompanying code for our paper:
Xinghua Lou, Fred A. Hamprecht. Structured Learning for Cell Tracking. In Twenty-Fifth Annual Conference on Neural Information Processing Systems, 2011. (NIPS'11)

To find the paper as well as the design document and user guide, please visit 
http://hci.iwr.uni-heidelberg.de/Staff/xlou/research/tracking.html
or, take a look at ./doc.


Note: This library has been compiled and tested under
1. Linux 32-bit and 64-bit;
2. Windows 32-bit;
3. Mac (by Jonathan Mackenzie, jpm67@cam.ac.uk)

If you find any problem compiling or running it under other platforms, please let the author know.

We thank the following users for their useful feedback:
* Jan Funke for spotting errors in the TrckingTrainer class;
* Bernhard Kausler for many suggestins;
* Jonathan Mackenzie for bug reports;
* SÃ©bastien Tosi for help on incorporating libtiff.

(C) Xinghua Lou (xinghua.lou@iwr.uni-heidelberg.de, xinghua.lou@gmail.com)
